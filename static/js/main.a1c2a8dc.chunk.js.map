{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","isMovieFined","setIsMovieFined","loading","setLoading","handleClick","a","fetch","then","response","json","movieFromServer","Response","searchedMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","value","placeholder","classNames","onChange","event","target","disabled","length","onClick","role","aria-hidden","App","state","data","some","film","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1c2a8dc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=8b940388';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [isMovieFined, setIsMovieFined] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = async() => {\n    const movieFromServer = await fetch(`${BASE_URL}&t=${title}`)\n      .then(response => response.json());\n\n    if (movieFromServer.Response === 'False') {\n      setIsMovieFined(false);\n      setLoading(false);\n\n      return;\n    }\n\n    const searchedMovie = {\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n      imdbId: movieFromServer.imdbID,\n    };\n\n    setMovie(searchedMovie);\n    setIsMovieFined(true);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': !isMovieFined })}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setIsMovieFined(true);\n              }}\n            />\n          </div>\n          {!isMovieFined && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              disabled={title.length === 0}\n              onClick={() => {\n                handleClick();\n                setLoading(true);\n              }}\n              className=\"button btn-light\"\n            >\n              {loading && (\n              <span\n                className=\"spinner-grow spinner-grow-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n              )}\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              disabled={!movie}\n              onClick={() => {\n                addMovie(movie);\n                setTitle('');\n                setMovie(null);\n                setIsMovieFined(true);\n              }}\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n        <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (!this.state.movies\n      .some(film => film.imdbId === movie.imdbId)) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, movie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}